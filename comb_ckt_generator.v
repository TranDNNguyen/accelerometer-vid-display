//=======================================================
// comb_ckt_generator.v
//
// This code is generated by Terasic System Builder
// and modified by M. Hildebrand and B. Baas
//
// 2018/02/05 First version
//=======================================================

module comb_ckt_generator (
	clk,
   col,
   row,
	smooth_x,
	smooth_y,
   red,
   green,
   blue,
	SW
   );

input	clk;
input [9:0]  col;
input [8:0]  row;
input [9:0] SW;
input	[15:0] smooth_x;
input	[15:0] smooth_y;
output [3:0]  red;    // 4-bit color output
output [3:0]  green;  // 4-bit color output
output [3:0]  blue;   // 4-bit color output
reg [3:0]     red, green, blue;   

wire [11:0] mem_data;
reg [7:0] addr_rd, r_addr_rd;
reg [3:0] x_addr, y_addr;
reg [9:0] pixel_x_sat;
reg [8:0] pixel_y_sat;
 
	always@(*) begin		
		if((10'd313 + smooth_x[9:0]) >= 10'd623) begin
			pixel_x_sat = 10'd623;
			if(smooth_x[15] == 1'b1)begin //negative
				pixel_x_sat= 9'd0;
			end
			else begin
				pixel_x_sat = 9'd623;
			end
		end
		else begin
			pixel_x_sat = smooth_x[9:0] + 10'd313;
		end
	
		if((9'd233 + smooth_y[8:0] >= 9'd463)) begin
			if(smooth_y[15] == 1'b1)begin //negative
				pixel_y_sat= 9'd0;
			end
			else begin
				pixel_y_sat = 9'd463;
			end
		end
		else begin
			pixel_y_sat = smooth_y[8:0] + 9'd233;
		end
			
		if((col >= pixel_x_sat) && (col <= pixel_x_sat + 10'd15) 
			&& (row >= pixel_y_sat) && (row <= pixel_y_sat + 9'd15)) begin
			
			x_addr = col - (10'd313 + pixel_x_sat);
			y_addr = row - (9'd233 + pixel_y_sat);
			
			addr_rd = {y_addr, x_addr};
			
			red = mem_data[11:8];
			green = mem_data[7:4];
			blue = mem_data[3:0];
		end
		else begin
			{red, green, blue} = 12'h000;
		end

	end
	
	memory mem(
		.clk(clk),
		.addr_rd(addr_rd),
		.data_out(mem_data)
	);
	
endmodule

